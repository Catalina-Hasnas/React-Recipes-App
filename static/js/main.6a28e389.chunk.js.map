{"version":3,"sources":["assets/img/avocado-toast.jpg","assets/img/greek-salad.jpg","assets/img/mushroom-cream-soup.jpg","components/Layout/Layout.js","components/Recipe/Recipe.js","components/Recipes.js","components/Responsive/utilResponsive.js","components/Responsive/Responsive.js","containers/NewRecipe/NewRecipe.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","Layout","props","react_default","a","createElement","className","children","recipe","react","name","index_es","onClick","delete","icon","faTimes","src","img","alt","ingredients","directions","recipes","resetButton","map","ref","React","createRef","Recipe_Recipe","ingredient","index","key","quantity","unitOfMeasurement","direction","id","event","length","reset","IdDeviceBreakpointsByWidth","laptop_max","laptop_min","tablet_min","tablet_max","mobile_max","default_min","IdMobileHeight","mobileLandscape_min","mobileLandscape_max","getWindowDimension","width","window","innerWidth","document","documentElement","clientWidth","body","height","innerHeight","clientHeight","initialState","Responsive","_React$PureComponent","_getPrototypeOf2","_this","Object","classCallCheck","this","_len","arguments","args","Array","_key","possibleConstructorReturn","getPrototypeOf","call","apply","concat","state","render","_this$props","displayIn","_this$state","shouldRenderChildren","shouldRender","Fragment","handleResize","_getWindowDimension2","setState","display","indexOf","inherits","createClass","value","addEventListener","removeEventListener","PureComponent","validateForm","valid","errors","values","forEach","val","NewRecipe","currentIngredient","resetIngredient","_event$target","target","replace","RegExp","test","defineProperty","propertyName","objectSpread","_event$target2","Date","now","preventDefault","newIngredient","toConsumableArray","alert","ingredientIndex","findIndex","splice","userRecipe","split","form","_this2","htmlFor","onChange","handleChange","type","placeholder","noValidate","required","Responsive_Responsive","onSubmit","addIngredient","undefined","handleIngredientChange","handleSubmit","deleteIngredient","faTrash","Component","App","avocadoToastImg","greekSaladImg","mushroomCreamSoupImg","initialArray","json","sessionStorage","getItem","JSON","parse","prevProps","prevStates","stringify","setItem","recipesIndex","console","log","components_Layout_Layout","Recipes","deleteRecipe","resetRecipes","containers_NewRecipe_NewRecipe","addUserRecipe","Boolean","location","hostname","match","ReactDOM","src_App","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.6a28e389.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/avocado-toast.90ceaec1.jpg\";","module.exports = __webpack_public_path__ + \"static/media/greek-salad.288869c6.jpg\";","module.exports = __webpack_public_path__ + \"static/media/mushroom-cream-soup.915b5bba.jpg\";","import React from 'react';\r\nimport './Layout.css'\r\n\r\nconst Layout = (props) => {\r\n    return (\r\n        <div className=\"App\">\r\n            <header className=\"py-3\">\r\n            <div className=\"container\">\r\n                <h2 className=\"font-weight-bold color-primary\">Everyday <br/> Recipes</h2>\r\n                <h5 className=\"font-weight-bold color-primary\">For those who like to eat, but don't like to cook.</h5>\r\n            </div>\r\n            </header>\r\n            <main>\r\n                {props.children}\r\n            </main>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Layout;\r\n","import React, { Fragment } from 'react';\r\nimport './Recipe.css';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faTimes } from '@fortawesome/free-solid-svg-icons';\r\nimport propTypes from 'prop-types';\r\n\r\n\r\nconst recipe = (props) => {\r\n    return (\r\n        <Fragment>\r\n            <div className=\"container background-primary pb-3\">\r\n                <div className=\"d-flex flex-row justify-content-center align-items-center\">\r\n                    <h2 className=\"flex-grow-1 p-3 font-weight-bold text-monospace text-center\"><span className=\"border-top border-bottom border-dark\">{props.name}</span></h2>\r\n                    <FontAwesomeIcon onClick={props.delete} className=\"delete-recipe mr-3\" icon={faTimes}/>\r\n                </div>\r\n\r\n                <div className=\"d-flex flex-row flex-wrap justify-content-between align-items-center\">\r\n                    <div className=\"col-lg-6\">\r\n                        <img className=\"img-fluid\" src={props.img} alt=\"image here\" />\r\n                    </div>\r\n                    <div>\r\n                        <div className=\"mt-3 mr-5\">\r\n                            <h3 className=\"text-monospace color-primary ml-3\">Ingredients:</h3>\r\n                            <ul>\r\n                                {props.ingredients}\r\n                            </ul>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                \r\n                <div className= \"d-flex flex-column\">\r\n                    <h3 className=\"mt-5 ml-3 color-primary text-monospace\">Directions:</h3>\r\n                    <ol className=\"text-justify\">\r\n                        {props.directions}\r\n                    </ol>\r\n                </div>\r\n            </div>\r\n            <hr/>\r\n        </Fragment>\r\n    )\r\n}\r\n\r\nrecipe.propTypes = {\r\n    name: propTypes.string,\r\n    ingredients: propTypes.string,\r\n    directions: propTypes.string,\r\n    delete: propTypes.func,\r\n};\r\n\r\nexport default recipe; ","import React, { Fragment } from 'react';\r\nimport Recipe from \"./Recipe/Recipe\";\r\nimport propTypes from 'prop-types';\r\n\r\n\r\nconst recipes = (props) => {\r\n    \r\n    let recipes = (\r\n        <Fragment>\r\n            {props.recipes.map((recipes) => {\r\n                const ref = React.createRef();\r\n                return <Recipe \r\n                name={recipes.name}\r\n                img={recipes.img}  \r\n                ingredients={recipes.ingredients.map((ingredient, index) => {\r\n                return <li key={index}> {ingredient.quantity + \" \" + ingredient.unitOfMeasurement + \" of \" + ingredient.ingredient}</li>\r\n                })}  \r\n                directions={recipes.directions.map((direction, index) => {\r\n                return <li key={index}>{direction}</li>\r\n                })}\r\n                key={recipes.id}\r\n                ref={ref}\r\n                delete={(event) => props.delete(event, recipes.id)}\r\n                />\r\n            })}\r\n        </Fragment>\r\n    );\r\n\r\n    let resetButton;\r\n\r\n    if (props.recipes.length == 0) {\r\n    resetButton = \r\n        <div className=\"pb-2 d-flex flex-row justify-content-center\">\r\n        <button onClick={props.reset} className=\"text-center button submit-button col-lg-2\">\r\n            Restore default\r\n        </button>\r\n        </div> \r\n    }\r\n\r\n    return (\r\n        <Fragment>\r\n            {resetButton}\r\n            {recipes}\r\n        </Fragment>\r\n    );\r\n};\r\n\r\nrecipes.propTypes = {\r\n    recipes: propTypes.array,\r\n    delete: propTypes.func,\r\n    reset: propTypes.func\r\n};\r\n\r\nexport default recipes;","export const DeviceWidthObject = {\r\n\r\n    MobileSmall: { max: 320, min: 0 },\r\n    MobileMedium: { max: 375, min: 321 },\r\n    MobileLarge: { max: 767, min: 376 },\r\n    \r\n    Tablet: { max: 991, min: 768 }, \r\n    LaptopSmall: { max: 1024, min: 992 },\r\n    LaptopLarge: { max: 1440, min: 1025 }, \r\n    LargerThanLaptop: { max: 2560, min: 1441 },\r\n    LargeScreenMax: { max: 999999, min: 2561 }\r\n}; \r\n\r\nexport const IdDeviceBreakpointsByWidth = {\r\n    laptop_max: 1440,\r\n    laptop_min: 992,\r\n    tablet_min: 768,\r\n    tablet_max: 991,\r\n    mobile_max: 767,\r\n    default_min: 768 // Unrecognized device\r\n}\r\n\r\nexport const IdMobileHeight = {\r\n    mobileLandscape_min: 320,\r\n    mobileLandscape_max: 425\r\n}\r\n\r\nexport const getWindowDimension = () => {\r\n    const width = window.innerWidth\r\n        || document.documentElement.clientWidth\r\n        || document.body.clientWidth; \r\n    \r\n    const height = window.innerHeight\r\n        || document.documentElement.clientHeight\r\n        || document.body.clientHeight; return { width, height }\r\n};\r\n\r\nexport const getDeviceTypeInfo = () => {\r\n    const { width, height } = getWindowDimension()\r\n    const buildDeviceDetails = {\r\n      deviceType: '',\r\n      deviceTypeVariant: '',\r\n      orientation: 'Portrait',\r\n      width,\r\n      height,\r\n      isFallback: false\r\n    }\r\n  //  Edge case\r\n    const hasEdgeCase = handleExceptions(buildDeviceDetails, width, height)\r\n    if (hasEdgeCase) {\r\n      return hasEdgeCase\r\n    }\r\n    if (height < width) {\r\n      // Orientation is landscape\r\n      buildDeviceDetails.orientation = 'Landscape'\r\n  \r\n      if (height <= IdMobileHeight.mobileLandscape_max) {\r\n        // Mobile (landscape)\r\n        buildDeviceDetails.deviceType = 'Mobile'\r\n        for (const devc in DeviceWidthObject) {\r\n          if (\r\n            height <= DeviceWidthObject[devc].max &&\r\n            height >= DeviceWidthObject[devc].min\r\n          ) {\r\n            buildDeviceDetails.deviceTypeVariant = devc\r\n            break\r\n          }\r\n        }\r\n      } else if (\r\n        width <= IdDeviceBreakpointsByWidth.tablet_max &&\r\n        width >= IdDeviceBreakpointsByWidth.tablet_min\r\n      ) {\r\n        // Tablet (landscape)\r\n        buildDeviceDetails.deviceType = 'Tablet'\r\n        buildDeviceDetails.deviceTypeVariant = 'Tablet'\r\n      } else if (\r\n        width <= IdDeviceBreakpointsByWidth.laptop_max &&\r\n        width >= IdDeviceBreakpointsByWidth.laptop_min\r\n      ) {\r\n        // Laptop (landscape)\r\n        buildDeviceDetails.deviceType = 'Laptop'\r\n  \r\n        for (const devc in DeviceWidthObject) {\r\n          if (\r\n            width <= DeviceWidthObject[devc].max &&\r\n            width >= DeviceWidthObject[devc].min\r\n          ) {\r\n            buildDeviceDetails.deviceTypeVariant = devc\r\n            break\r\n          }\r\n        }\r\n      } else if (width > IdDeviceBreakpointsByWidth.laptop_max) {\r\n        // Larger than Laptop (landscape)\r\n        buildDeviceDetails.deviceType = 'LargerThanLaptop'\r\n  \r\n        for (const devc in DeviceWidthObject) {\r\n          if (\r\n            width <= DeviceWidthObject[devc].max &&\r\n            width >= DeviceWidthObject[devc].min\r\n          ) {\r\n            buildDeviceDetails.deviceTypeVariant = devc\r\n            break\r\n          }\r\n        }\r\n      } else {\r\n        // TODO: UNKNOWN realm\r\n        buildDeviceDetails.deviceType = 'Mobile'\r\n        buildDeviceDetails.deviceTypeVariant = 'MobileLarge'\r\n        buildDeviceDetails.isFallback = true\r\n      }\r\n  \r\n      return buildDeviceDetails\r\n    } else {\r\n      // Orientation is portrait\r\n      buildDeviceDetails.orientation = 'Portrait'\r\n  \r\n      for (const devc in DeviceWidthObject) {\r\n        if (\r\n          width <= DeviceWidthObject[devc].max &&\r\n          width >= DeviceWidthObject[devc].min\r\n        ) {\r\n          buildDeviceDetails.deviceTypeVariant = devc\r\n          break\r\n        }\r\n      }\r\n  \r\n      if (\r\n        width <= IdDeviceBreakpointsByWidth.laptop_max &&\r\n        width >= IdDeviceBreakpointsByWidth.laptop_min\r\n      ) {\r\n        buildDeviceDetails.deviceType = 'Laptop'\r\n      }\r\n  \r\n      if (\r\n        width <= IdDeviceBreakpointsByWidth.tablet_max &&\r\n        width >= IdDeviceBreakpointsByWidth.tablet_min\r\n      ) {\r\n        buildDeviceDetails.deviceType = 'Tablet'\r\n      }\r\n      if (width <= IdDeviceBreakpointsByWidth.mobile_max) {\r\n        buildDeviceDetails.deviceType = 'Mobile'\r\n      }\r\n  \r\n      if (width > IdDeviceBreakpointsByWidth.laptop_max) {\r\n        buildDeviceDetails.deviceType = 'LargerThanLaptop'\r\n      }\r\n  \r\n      return buildDeviceDetails\r\n    }\r\n  }\r\n  const handleExceptions = (buildDeviceDetails, width, height) => {\r\n    //  iPadPro\r\n    if (width === 1024 && height === 1366) {\r\n      buildDeviceDetails.deviceType = 'Tablet'\r\n      buildDeviceDetails.deviceTypeVariant = 'iPadPro'\r\n      buildDeviceDetails.orientation = 'Portrait'\r\n  \r\n      return buildDeviceDetails\r\n    } else if (width === 1366 && height === 1024) {\r\n      //  Edge case\r\n      buildDeviceDetails.deviceType = 'Tablet'\r\n      buildDeviceDetails.deviceTypeVariant = 'iPadPro'\r\n      buildDeviceDetails.orientation = 'Landscape'\r\n  \r\n      return buildDeviceDetails\r\n    }\r\n  \r\n    return undefined\r\n  }\r\n\r\n","import React from \"react\";\r\nimport {\r\n    getWindowDimension,\r\n    IdDeviceBreakpointsByWidth,\r\n    IdMobileHeight\r\n} from \"./utilResponsive\";\r\n\r\nconst { width, height } = getWindowDimension();\r\nconst initialState = { width, height };\r\n\r\nexport class Responsive extends React.PureComponent {\r\n    state = initialState;\r\n    componentDidMount() {\r\n        window.addEventListener(\"resize\", this.handleResize, false);\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        window.removeEventListener(\"resize\", this.handleResize, false);\r\n    }\r\n\r\n    render = () => {\r\n        const { children, displayIn } = this.props;\r\n        const { width, height } = this.state;\r\n\r\n        const shouldRenderChildren = this.shouldRender(displayIn, width, height);\r\n\r\n        return (\r\n            <React.Fragment>{shouldRenderChildren ? children : null}</React.Fragment>\r\n        );\r\n    };\r\n\r\n    handleResize = () => {\r\n        const { width, height } = getWindowDimension();\r\n        this.setState({ width, height });\r\n    };\r\n\r\n    shouldRender = (display, width, height) => {\r\n        if (\r\n            display.indexOf(\"Laptop\") !== -1 &&\r\n            width >= IdDeviceBreakpointsByWidth.laptop_min\r\n        ) {\r\n            return true;\r\n        }\r\n\r\n        if (\r\n            display.indexOf(\"Tablet\") !== -1 &&\r\n            (width <= IdDeviceBreakpointsByWidth.tablet_max &&\r\n                width >= IdDeviceBreakpointsByWidth.tablet_min)\r\n        ) {\r\n            return true;\r\n        }\r\n\r\n        // For mobile regardless of orientation\r\n        if (\r\n            display.indexOf(\"Mobile\") !== -1 &&\r\n            width <= IdDeviceBreakpointsByWidth.mobile_max\r\n        ) {\r\n            return true;\r\n        }\r\n\r\n        if (\r\n            display.indexOf(\"MobilePortrait\") !== -1 &&\r\n            (width <= IdDeviceBreakpointsByWidth.mobile_max &&\r\n                height >= IdMobileHeight.mobileLandscape_max)\r\n        ) {\r\n            return true;\r\n        }\r\n\r\n        return !!(\r\n            display.indexOf(\"MobileLandScape\") !== -1 &&\r\n            (width <= IdDeviceBreakpointsByWidth.mobile_max &&\r\n                height <= IdMobileHeight.mobileLandscape_min)\r\n        );\r\n    };\r\n}\r\n","import React, {Component} from 'react';\r\nimport './NewRecipe.css'; \r\nimport {FontAwesomeIcon} from '@fortawesome/react-fontawesome';\r\nimport {faTrash} from '@fortawesome/free-solid-svg-icons'\r\nimport { Responsive } from \"../../components/Responsive/Responsive\";\r\n\r\n\r\nconst validateForm = (...errors) => {\r\n    let valid = true;\r\n    Object.values(errors).forEach(\r\n        // if we have an error string set valid to false\r\n        (val) => val.length > 0 && (valid = false)\r\n    );\r\n    return valid;\r\n}\r\n\r\nclass NewRecipe extends Component {\r\n    state = {\r\n        name: \"\",\r\n        ingredients: [],\r\n        currentIngredient: \r\n            {\r\n            id: \"\",\r\n            quantity: \"\",\r\n            unitOfMeasurement: \"pieces\",\r\n            ingredient: \"\"\r\n            },\r\n        directions: \"\",\r\n        img: \"\",\r\n        errors: {\r\n            name: '',\r\n            quantity: '',\r\n            ingredient: '',\r\n            directions: ''\r\n        }\r\n    };\r\n\r\n    handleChange(event) { \r\n        const { name, value } = event.target;\r\n        let errors = this.state.errors;\r\n\r\n        let noSpace = value.replace(/ /g,\"\");\r\n        let length = noSpace.length;\r\n\r\n        if (name === 'name') {\r\n            if (RegExp(/^[a-zA-Z\\s]*$/).test(value)) {\r\n                if (length < 4 || length >= 30) {\r\n                    errors.name='Name must be between 4 and 30 characters'\r\n                } else if (length >=4 && length < 30) {\r\n                    errors.name=''\r\n                }\r\n            } else {\r\n                errors.name = 'Name must not contain any numbers'\r\n            }\r\n        }\r\n\r\n        if (name === 'directions') {\r\n            if (length <10 || length >= 500) {\r\n                errors.directions='Directions must be between 10 and 1000 characters'\r\n            } else if (length >=10 && length <1000) {\r\n                errors.directions=''\r\n            }\r\n        }\r\n\r\n        this.setState({\r\n            errors, [name]: value\r\n        })\r\n    }\r\n\r\n    handleIngredientChange(event, propertyName) {\r\n        let currentIngredient = {\r\n            ...this.state.currentIngredient\r\n        };\r\n        const { name, value } = event.target;\r\n        \r\n        currentIngredient[propertyName] = value;\r\n        currentIngredient.id = Date.now();\r\n        let errors = this.state.errors;\r\n\r\n        let noSpace = value.replace(/ /g,\"\");\r\n        let length = noSpace.length;\r\n\r\n       if (name === 'quantity') {\r\n           if (RegExp(/^(0*[1-9][0-9]*(\\.[0-9]+)?|0+\\.[0-9]*[1-9][0-9]*)$/).test(value)) {\r\n               if (length >= 4) {\r\n                   errors.quantity = \"Quantity can't have more than 4 digits\"\r\n               } else if (length < 4) {\r\n                   errors.quantity = ''\r\n               }\r\n           } else {\r\n               errors.quantity = 'Quantity must be a number greater than 0'\r\n           }\r\n       }\r\n\r\n       if (name === 'ingredient') {\r\n           if (RegExp(/^[a-zA-Z\\s]*$/).test(value)) {\r\n               if (length < 3 || length >= 30) {\r\n                   errors.ingredient = 'Ingredient must be between 3 and 30 characters'\r\n               } else if (length >=3) {\r\n                   errors.ingredient = ''\r\n               }\r\n           } else {\r\n               errors.ingredient = 'Ingredient must not contain any numbers'\r\n           }\r\n       }\r\n        this.setState({ \r\n            errors, currentIngredient: currentIngredient\r\n        })\r\n    }\r\n\r\n    addIngredient(event) {\r\n        event.preventDefault();\r\n        let newIngredient = this.state.currentIngredient;\r\n        let ingredients = [...this.state.ingredients];\r\n\r\n        if (newIngredient.quantity !== \"\" && newIngredient.ingredient !== \"\") {\r\n            if(validateForm(this.state.errors.quantity, this.state.errors.ingredient)) {\r\n                ingredients = [...this.state.ingredients, newIngredient]\r\n            } else {\r\n                alert ('Invalid Ingredient')\r\n            }\r\n        } else {\r\n            alert (\"Ingredient can't be empty\")\r\n        }\r\n\r\n          this.setState({\r\n            ingredients: ingredients,\r\n            currentIngredient: {\r\n                id: \"\",\r\n                quantity: \"\",\r\n                unitOfMeasurement: \"pieces\",\r\n                ingredient: \"\"  \r\n            }\r\n          })\r\n    }\r\n\r\n    resetIngredient = () => {\r\n        this.ingredient.reset() \r\n    }\r\n\r\n    deleteIngredient(id){\r\n        const ingredients = [...this.state.ingredients];\r\n        const ingredientIndex = this.state.ingredients.findIndex(ingredient => {\r\n            return ingredient.id === id;\r\n        });\r\n        ingredients.splice(ingredientIndex,1);\r\n        this.setState( {ingredients: ingredients} );\r\n    }\r\n\r\n    handleSubmit(event) {\r\n        event.preventDefault();\r\n\r\n        if (this.state.name !== \"\" && this.state.directions !== \"\" && this.state.ingredients.length>=1) {\r\n            if(validateForm(this.state.errors.name, this.state.errors.directions)) {\r\n\r\n                let userRecipe = {\r\n                    id: Date.now(),\r\n                    name: this.state.name,\r\n                    ingredients: [...this.state.ingredients],\r\n                    directions: this.state.directions.split(\"\\n\"),\r\n                    img: this.state.img\r\n                }\r\n                this.props.userRecipe(userRecipe);\r\n\r\n                this.form.reset();\r\n\r\n                this.setState({\r\n                    name: \"\",\r\n                    ingredients: [],\r\n                    directions: \"\",\r\n                    img: \"\"  \r\n                })\r\n\r\n            } else {\r\n                alert('Invalid form. Please check the warnings and try again.')\r\n            }\r\n        } else {\r\n            alert('Invalid form. Please make sure to add a name, at least one ingredient and direction.')\r\n        }\r\n    } \r\n       \r\n    render() {\r\n\r\n        const {errors} = this.state;\r\n\r\n        return (    \r\n            <div className=\"container text-center\">\r\n                <h2 className=\"text-monospace\"> Upload your own recipe </h2>\r\n\r\n                <form ref={form => this.form = form} className=\"form background-primary p-3 mt-4\">\r\n                    \r\n                    <div className=\"form-row d-flex align-items-center flex-wrap\">\r\n                        <div className=\"col-lg-7 form-group d-flex flex-column align-items-center\">\r\n                            <label htmlFor=\"name\">Recipe name:</label>\r\n                            <input onChange={(event) => this.handleChange(event)} name=\"name\" type=\"text\" placeholder=\"Mashed potatoes\" noValidate required/>\r\n                        </div>\r\n\r\n                        <div className=\"col-lg-5 form-group\">\r\n                            {/* <input type=\"file\" name=\"file-3[]\" id=\"file-3\" className=\"inputfile inputfile-3\" />\r\n                            <label htmlFor=\"file-3\"><svg xmlns=\"http://www.w3.org/2000/svg\" width=\"20\" height=\"17\" viewBox=\"0 0 20 17\"><path d=\"M10 0l-5.2 4.9h3.3v5.1h3.8v-5.1h3.3l-5.2-4.9zm9.3 11.5l-3.2-2.1h-2l3.4 2.6h-3.5c-.1 0-.2.1-.2.1l-.8 2.3h-6l-.8-2.2c-.1-.1-.1-.2-.2-.2h-3.6l3.4-2.6h-2l-3.2 2.1c-.4.3-.7 1-.6 1.5l.6 3.1c.1.5.7.9 1.2.9h16.3c.6 0 1.1-.4 1.3-.9l.6-3.1c.1-.5-.2-1.2-.7-1.5z\"/></svg> <span>Upload an image&hellip;</span></label> */}\r\n                            <label htmlFor=\"url\">Image URL</label>\r\n                            <input onChange={(event) => this.handleChange(event)} type=\"url\" name=\"img\" placeholder=\"https://i.ibb.co/xgbxQHW/greek-salad.jpg\"/>\r\n                        </div>\r\n                    </div>\r\n\r\n                    <Responsive displayIn={[\"Laptop\"]}>\r\n                        <div>\r\n                            {errors.name.length > 0 && \r\n                                <small className=\"text-danger\">{errors.name}</small>}\r\n                        </div>\r\n                    </Responsive>\r\n\r\n                    <form ref={ingredient => this.ingredient = ingredient} onSubmit={(event) => {this.addIngredient(event)}} noValidate>\r\n                        <div className=\"form-row\">\r\n                            <div className=\"d-flex flex-row flex-wrap align-items-center\">\r\n                                <div className=\"fivepxpadding  form-group col-lg-3\">\r\n                                    <label htmlFor=\"quantity\">Quantity:</label>\r\n                                    <input onChange={(event, propertyName=\"quantity\") => this.handleIngredientChange(event, propertyName)} name=\"quantity\" type=\"\" placeholder=\"6\" noValidate required/>\r\n                                </div>\r\n                                <div className=\"form-group col-lg-3\">\r\n                                    <label htmlFor=\"unitOfMeasurement\">Unit of measurement:</label>\r\n                                    <select className=\"p-2\" onChange={(event, propertyName=\"unitOfMeasurement\") => this.handleIngredientChange(event, propertyName)} name=\"unitOfMeasurement\" id=\"metric\" name=\"metric\">\r\n                                        <option value=\"pieces\">pieces</option>\r\n                                        <option value=\"miligrams\">miligrams</option>\r\n                                        <option value=\"grams\">grams</option>\r\n                                        <option value=\"kilograms\">kilograms</option>\r\n                                        <option value=\"liters\">liters</option>\r\n                                        <option value=\"mililiter\">mililiters</option>\r\n                                    </select>\r\n                                </div>\r\n                                <div className=\"form-group col-lg-3\">\r\n                                    <label htmlFor=\"ingredient\">Ingredient:</label>\r\n                                    <input onChange={(event, propertyName=\"ingredient\") => this.handleIngredientChange(event, propertyName)} name=\"ingredient\" type=\"text\" placeholder=\"potatoes\" noValidate required/>\r\n                                </div>\r\n                                <div className=\"col-lg-3 mt-3\">\r\n                                    <button onClick={(event) => this.resetIngredient(event)} className=\"button ingr-button\" type=\"submit\"> Submit ingredient </button> \r\n                                </div>\r\n                            </div>\r\n\r\n                            <div className=\"d-flex flex-column align-items-start\">\r\n\r\n                            <Responsive displayIn={[\"Tablet\"], [\"Mobile\"]}>\r\n                                <div>\r\n                                    {errors.name.length > 0 && \r\n                                        <small className=\"text-danger\">{errors.name}</small>}\r\n                                </div>\r\n                            </Responsive>\r\n\r\n\r\n                            <div>\r\n                                {errors.quantity.length > 0 && \r\n                                    <small className=\"text-danger\">{errors.quantity}</small>}   \r\n                            </div>\r\n\r\n\r\n                            <div>\r\n                                {errors.ingredient.length > 0 && \r\n                                    <small className=\"text-danger\">{errors.ingredient}</small>}\r\n                            </div>\r\n\r\n                            <div>\r\n                                {errors.directions.length > 0 && \r\n                                    <small className=\"text-danger\">{errors.directions}</small>}\r\n                            </div>\r\n                        </div>\r\n                        </div>\r\n                    </form>\r\n\r\n                    <div className=\"form-group mt-3\">\r\n                        <textarea onChange={(event) => this.handleChange(event)} name=\"directions\" type=\"text\" placeholder=\"Recipe directions...\"/>\r\n                    </div>\r\n\r\n                    <button onClick={(event) => this.handleSubmit(event)} className=\"button submit-button col-lg-3\" type=\"submit\"> Submit recipe </button>\r\n                    \r\n                </form>\r\n            \r\n                <div> \r\n                    <h2 className=\"text-muted\">Preview:</h2>\r\n                    <p> Name: {this.state.name} </p>\r\n                    <ul> Ingredients: \r\n                        {this.state.ingredients.map((ingredient) => {\r\n                            return <li key={ingredient.id}> {ingredient.quantity + \" \" + ingredient.unitOfMeasurement + \" of \" + ingredient.ingredient} \r\n                                        <FontAwesomeIcon onClick={(event, id=ingredient.id) => this.deleteIngredient(event, id)} className=\"ml-2 delete-button\" icon={faTrash}/>\r\n                                    </li>\r\n                        })} \r\n                    </ul>\r\n                    <ol> Directions:\r\n                        {this.state.directions.split('\\n').map((direction, index) => {\r\n                            return <li key={index}>{direction}</li>\r\n                        })}\r\n                    </ol>\r\n                    <p>Image:</p>\r\n                    <img className=\"img-fluid\" src={this.state.img} alt=\"please try another link\"/>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\n\r\n\r\n\r\nexport default NewRecipe; ","import 'bootstrap/dist/css/bootstrap.min.css';\r\nimport React, { Component, Fragment } from 'react';\r\nimport Layout from './components/Layout/Layout'\r\nimport Recipes from \"./components/Recipes\";\r\nimport NewRecipe from \"./containers/NewRecipe/NewRecipe\";\r\nimport avocadoToastImg from \"./assets/img/avocado-toast.jpg\";\r\nimport greekSaladImg from \"./assets/img/greek-salad.jpg\";\r\nimport mushroomCreamSoupImg from \"./assets/img/mushroom-cream-soup.jpg\";\r\n\r\n\r\nclass App extends Component {\r\n  state = {\r\n    recipes: [\r\n        {\r\n          id: 1,\r\n          name: \"Avocado Toast\",\r\n          ingredients: [\r\n              { quantity: 0.5, unitOfMeasurement: \"pieces\", ingredient: \"avocado\" },\r\n              { quantity: 0.5, unitOfMeasurement: \"teaspoons\", ingredient: \"lemon juice\" },\r\n              { quantity: 1, unitOfMeasurement: \"pinch\", ingredient: \"Kosher salt\" },\r\n              { quantity: 1, unitOfMeasurement: \"pinch\", ingredient: \"freshly ground black pepper\" },\r\n              { quantity: 1, unitOfMeasurement: \"slices\", ingredient: \"whole grain bread, toasted\" },\r\n              { quantity: 0.5, unitOfMeasurement: \"teaspoons\", ingredient: \"olive oil\" }\r\n          ],\r\n          directions: [\"In a small bowl, combine avocado, lemon juice, salt, and pepper. Gently mash with the back of a fork.\", \"Top toasted bread with mashed avocado mixture. Drizzle with olive oil and sprinkle over desired toppings.\"],\r\n          img: avocadoToastImg\r\n        },\r\n        {\r\n          id: 2,\r\n          name: \"Greek Salad\",\r\n          ingredients: [\r\n              { quantity: 1, unitOfMeasurement: \"pieces\", ingredient: \"cucumber\" },\r\n              { quantity: 1, unitOfMeasurement: \"pieces\", ingredient: \"red bell pepper\" },\r\n              { quantity: 1, unitOfMeasurement: \"pints\", ingredient: \"tomatoes\" },\r\n              { quantity: 1, unitOfMeasurement: \"pieces\", ingredient: \"red onion\" },\r\n              { quantity: 0.5, unitOfMeasurement: \"pounds\", ingredient: \"feta cheese\" },\r\n              { quantity: 0.5, unitOfMeasurement: \"cups\", ingredient: \"calamata olives\" },\r\n              { quantity: 0.25, unitOfMeasurement: \"cups\", ingredient: \"vinegar\" },\r\n              { quantity: 1, unitOfMeasurement: \"teaspoons\", ingredient: \"kosher salt\" },\r\n              { quantity: 0.5, unitOfMeasurement: \"teaspoons\", ingredient: \"freshly ground black pepper\" },\r\n              { quantity: 0.5, unitOfMeasurement: \"cups\", ingredient: \"olive oil\" }\r\n          ],\r\n          directions: [\"Place the cucumber, peppers, tomatoes and red onion in a large bowl.\", \"For the vinaigrette, whisk together the garlic, oregano, mustard, vinegar, salt and pepper in a small bowl. Still whisking, slowly add the olive oil to make an emulsion. Pour the vinaigrette over the vegetables. Add the feta and olives and toss lightly. Set aside for 30 minutes to allow the flavors to blend. Serve at room temperature.\"],\r\n          img: greekSaladImg\r\n        },\r\n        {\r\n          id: 3,\r\n          name: \"Mushroom Cream Soup\",\r\n          ingredients: [\r\n              { quantity: 4, unitOfMeasurement: \"tablespoons\", ingredient: \"butter\" },\r\n              { quantity: 1, unitOfMeasurement: \"tablespoons\", ingredient: \"oil\" },\r\n              { quantity: 2, unitOfMeasurement: \"pieces\", ingredient: \"onions\" },\r\n              { quantity: 4, unitOfMeasurement: \"cloves\", ingredient: \"garlic\" },\r\n              { quantity: 1.5, unitOfMeasurement: \"pounds\", ingredient: \"mushrooms\" },\r\n              { quantity: 4, unitOfMeasurement: \"teaspoons\", ingredient: \"thyme\" },\r\n              { quantity: 6, unitOfMeasurement: \"tablespoons\", ingredient: \"flour\" },\r\n              { quantity: 4, unitOfMeasurement: \"cups\", ingredient: \"chicken broth\" },\r\n              { quantity: 1, unitOfMeasurement: \"teaspoons\", ingredient: \"salt\" },\r\n              { quantity: 1, unitOfMeasurement: \"teaspoons\", ingredient: \"freshly ground black pepper\" },\r\n              { quantity: 1, unitOfMeasurement: \"cups\", ingredient: \"heavy cream\" },\r\n              { quantity: 1, unitOfMeasurement: \"teaspoons\", ingredient: \"fresh parsley\" }\r\n          ],\r\n          directions: [\"Heat butter and oil in a large pot over medium-high heat until melted. Sauté onion for 2 to 3 minutes until softened. Cook garlic until fragrant, about 1 minute.\", \"Add mushrooms and 2 teaspoons thyme, cook for 5 minutes. Pour in wine and allow to cook for 3 minutes.\", \"Sprinkle mushrooms with flour, mix well and cook for 2 minutes. Add stock, mix again and bring to a boil. Reduce heat to low-medium heat, season with salt, pepper and crumbled bouillon cubes.\", \"Cover and allow to simmer for 10-15 minutes, while occasionally stirring, until thickened.\", \"Reduce heat to low, stir in cream or half and half. Allow to gently simmer (do not boil). Adjust salt and pepper to your taste.\", \"Mix in parsley and remaining thyme. Serve warm.\"],\r\n          img: mushroomCreamSoupImg\r\n        }\r\n    ]\r\n};\r\n\r\ninitialArray = [...this.state.recipes];\r\n\r\ncomponentDidMount() {\r\n    const json = sessionStorage.getItem('recipes')\r\n    const recipes = JSON.parse(json) || this.initialArray;\r\n    this.setState(() => ({ recipes }))\r\n}\r\n\r\ncomponentDidUpdate(prevProps, prevStates){\r\n    const json = JSON.stringify(this.state.recipes)\r\n    sessionStorage.setItem('recipes', json)\r\n}\r\n\r\naddUserRecipe(userRecipe) {\r\n    let recipes = [...this.state.recipes, userRecipe];\r\n    this.setState({\r\n      recipes: recipes\r\n    });\r\n}\r\n\r\ndeleteRecipe(event, id) {\r\n  event.preventDefault();\r\n  let recipes = [...this.state.recipes];\r\n  const recipesIndex = this.state.recipes.findIndex(recipe => {\r\n      return recipe.id === id;\r\n  });\r\n  recipes.splice(recipesIndex,1);\r\n  this.setState( {recipes: recipes} );\r\n}\r\n\r\nresetRecipes(event) {\r\n  let recipes = [...this.initialArray];\r\n  this.setState({\r\n    recipes: this.initialArray\r\n  });\r\n  console.log(recipes)\r\n}\r\n\r\n  render () {\r\n    return (\r\n      <Fragment>\r\n        <Layout>\r\n          <Recipes \r\n            recipes={this.state.recipes} \r\n            delete={(event, id) => this.deleteRecipe(event, id)}\r\n            reset={(event) => this.resetRecipes(event)}/>\r\n          <NewRecipe\r\n            userRecipe={(userRecipe) => this.addUserRecipe(userRecipe)}/>\r\n        </Layout>\r\n      </Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n\r\n\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: http://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}